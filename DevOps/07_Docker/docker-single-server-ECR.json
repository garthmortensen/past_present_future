{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "dockerVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Project",
                        "Value": "Docker"
                    }
                ]
            }
        },
        "publicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "dockerVpc"
                },
                "CidrBlock": "10.0.0.0/24"
            }
        },
        "docker1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "ImageId": "ami-043218c94b0cb8d43",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "DockerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "publicSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "docker1"
                    }
                ]
            },
            "DependsOn": [
                "PublicRoute"
            ]
        },
        "DockerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "dockerVpc"
                },
                "GroupDescription": "Allow access from HTTP and SSH traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {"Ref": "YourIp"}
                    }
                ]
            }
        },
        "DockerSecurityGroupIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
              "IpProtocol": "-1",
              "FromPort": "-1",
              "ToPort": "-1",
              "SourceSecurityGroupId": { "Ref": "DockerSecurityGroup" },
              "GroupId": { "Fn::GetAtt": ["DockerSecurityGroup", "GroupId"]}
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "dockerVpc"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "dockerVpc"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            },
            "DependsOn": [
                "InternetGateway"
            ]
        },
        "SubnetAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "publicSubnet"
                }
            }
        },
		"MyRepository": {
			  "Type": "AWS::ECR::Repository",
			  "Properties": {
				"RepositoryName" : "dynacorpweb",
				"RepositoryPolicyText" : {
				  "Version": "2008-10-17",
				  "Statement": [
					{
					  "Sid": "AllowPushPull",
					  "Effect": "Allow",
					  "Principal": "*",
					  "Action": [
						"ecr:GetDownloadUrlForLayer",
						"ecr:BatchGetImage",
						"ecr:BatchCheckLayerAvailability"
						]
					}
				]
				}
			}
		}
    },
    "Parameters": {
      "KeyName": {
          "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
          "Type": "AWS::EC2::KeyPair::KeyName",
          "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
      },
      "YourIp": {
        "Description": "The current CIDR IP address of your workstation (x.x.x.x/32). http://checkip.amazonaws.com/",
        "Type": "String",
        "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-9]|3[0-2]))$",
        "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
      }
    },
    "Outputs": {
        "manager1PublicIp": {
          "Value": {"Fn::GetAtt": ["docker1","PublicIp"]},
          "Description": "docker1 public IP"
        }
    }
}